{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/TIL/2021-09-27/",
    "result": {"data":{"mdx":{"id":"412410ef-ac0b-5fed-aa66-323fd56c4394","tableOfContents":{"items":[{"url":"#2021-09-27-til","title":"2021-09-27 TIL"},{"url":"#2021-09-27-til-1","title":"2021-09-27 TIL"}]},"fields":{"title":"2021-09-27 TIL","slug":"/TIL/2021-09-27/","url":"https://demo-foam.owenyoung.com/blog/TIL/2021-09-27/","editUrl":"https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki/tree/main/TIL/2021-09-27.md","lastUpdatedAt":"2021-10-21T14:55:58.000Z","lastUpdated":"10/21/2021","gitCreatedAt":"2021-10-21T14:55:58.000Z","shouldShowTitle":false},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"2021-09-27-til\"\n  }, \"2021-09-27 TIL\"), mdx(\"h1\", {\n    \"id\": \"2021-09-27-til-1\"\n  }, \"2021-09-27 TIL\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"fire: fire is a python library\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"git pull = git fetch + git merge\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"hint: Pulling without specifying how to reconcile divergent branches is\\nhint: discouraged. You can squelch this message by running one of the following\\nhint: commands sometime before your next pull:\\nhint: \\nhint:   git config pull.rebase false  # merge (the default strategy)\\nhint:   git config pull.rebase true   # rebase\\nhint:   git config pull.ff only       # fast-forward only\\nhint: \\nhint: You can replace \\\"git config\\\" with \\\"git config --global\\\" to set a default\\nhint: preference for all repositories. You can also pass --rebase, --no-rebase,\\nhint: or --ff-only on the command line to override the configured default per\\nhint: invocation.\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"reconcile: \\uC870\\uC815\\uD558\\uB2E4\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"squelch: \\uB07D\\uC18C\\uB9AC \\uBABB\\uD558\\uAC8C \\uD568\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"string to each type \\uBCC0\\uD658 \\uC790\\uB3D9? \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"what is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \":= \"), \" operater?\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pseudo-code ?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://towardsdatascience.com/when-and-why-to-use-over-in-python-b91168875453\"\n  }, \"https://towardsdatascience.com/when-and-why-to-use-over-in-python-b91168875453\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"# ex.A\\nf_data = [f(x) for x in data if f(x) is not 4]\\n\\n# ex.B better than ex.A\\ndata = [1,2,3,4]\\nf_data = [y for x in data if (y := f(x)) is not 4]\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC8FC\\uC2DD \\uC608\\uCE21\\uD558\\uB294\\uAC8C \\uAC00\\uB2A5\\uD55C \\uC77C\\uC778\\uAC00?\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC5B4\\uB824\\uC6C0\\uC774 \\uC788\\uB2E4\\uACE0 \\uD568\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD2B8\\uC704\\uD130 \\uC815\\uC11C\\uBD84\\uC11D \\uB4F1\\uC744 \\uD1B5\\uD574\\uC11C \\uD560 \\uC218\\uB3C4 \\uC788\\uB2E4\\uB294.. \\uCE74\\uB354\\uB77C\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uBCF5\\uB9AC, seed 200\\uB9CC\\uC6D0, 2%\\uC529, 200\\uC77C = 1\\uC5B5\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"# 2021-09-27 TIL\n\n# 2021-09-27 TIL\n\n- fire: fire is a python library\n\n- git pull = git fetch + git merge\n\n```\nhint: Pulling without specifying how to reconcile divergent branches is\nhint: discouraged. You can squelch this message by running one of the following\nhint: commands sometime before your next pull:\nhint: \nhint:   git config pull.rebase false  # merge (the default strategy)\nhint:   git config pull.rebase true   # rebase\nhint:   git config pull.ff only       # fast-forward only\nhint: \nhint: You can replace \"git config\" with \"git config --global\" to set a default\nhint: preference for all repositories. You can also pass --rebase, --no-rebase,\nhint: or --ff-only on the command line to override the configured default per\nhint: invocation.\n```\n\n- reconcile: 조정하다\n- squelch: 끽소리 못하게 함\n\n- string to each type 변환 자동? \n- what is `:= ` operater?\n  - pseudo-code ?\n  - https://towardsdatascience.com/when-and-why-to-use-over-in-python-b91168875453\n\n```python\n# ex.A\nf_data = [f(x) for x in data if f(x) is not 4]\n\n# ex.B better than ex.A\ndata = [1,2,3,4]\nf_data = [y for x in data if (y := f(x)) is not 4]\n```\n\n\n\n- 주식 예측하는게 가능한 일인가?\n\n  - 어려움이 있다고 함\n\n  - 트위터 정서분석 등을 통해서 할 수도 있다는.. 카더라\n\n- 복리, seed 200만원, 2%씩, 200일 = 1억\n\n","excerpt":"2021-09-27 TIL 2021-09-27 TIL fire: fire is a python library git pull = git fetch + git merge reconcile: 조정하다 squelch: 끽소리 못하게 함 string to …","outboundReferences":[],"inboundReferences":[]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/TIL/2021-09-27/","sidebarItems":[{"title":"","items":[{"title":"Recently Updated","url":"/latest/","collapse":true,"indent":false,"items":[{"title":"02-03: AWS Copilot","url":"/Dev-ops/AWS Copilot/"},{"title":"02-03: MySQL 설치하기","url":"/DB/MySQL 설치하기/"},{"title":"02-03: 07. Lifecycle","url":"/Svelte/Lifecycle/"},{"title":"02-03: Svelte vs React","url":"/기타/Svelte React 기술 비교/"},{"title":"02-03: Webpack","url":"/번역/webpack-Modules/"},{"title":"02-03: 1. Introduction / b. Adding data","url":"/번역/Svelte-tutorial/Adding data/"},{"title":"02-03: 1. Introduction / a. Basics","url":"/번역/Svelte-tutorial/Basics/"},{"title":"02-03: 1. Introduction / c. Dynamic attributes","url":"/번역/Svelte-tutorial/Dynamic attributes/"},{"title":"02-03: Styling","url":"/번역/Svelte-tutorial/Styling/"},{"title":"02-03: 🤓","url":"/"}]}]},{"title":"Tags","items":[]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/Dev-ops/AWS Copilot/","title":"AWS Copilot","lastUpdatedAt":"2022-02-03T16:21:01.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/DB/MySQL 설치하기/","title":"MySQL 설치하기","lastUpdatedAt":"2022-02-03T16:19:01.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Svelte/Lifecycle/","title":"07. Lifecycle","lastUpdatedAt":"2022-02-03T11:08:36.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/기타/Svelte React 기술 비교/","title":"Svelte vs React","lastUpdatedAt":"2022-02-03T00:52:00.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/번역/webpack-Modules/","title":"Webpack","lastUpdatedAt":"2022-02-03T00:52:00.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/번역/Svelte-tutorial/Adding data/","title":"1. Introduction / b. Adding data","lastUpdatedAt":"2022-02-03T00:52:00.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/번역/Svelte-tutorial/Basics/","title":"1. Introduction / a. Basics","lastUpdatedAt":"2022-02-03T00:52:00.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/번역/Svelte-tutorial/Dynamic attributes/","title":"1. Introduction / c. Dynamic attributes","lastUpdatedAt":"2022-02-03T00:52:00.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/번역/Svelte-tutorial/Styling/","title":"Styling","lastUpdatedAt":"2022-02-03T00:52:00.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/","title":"🤓","lastUpdatedAt":"2022-02-03T00:48:16.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}